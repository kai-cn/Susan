package sz.susan.VO;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 19 16:51:03 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ServiceVORowImpl extends ViewRowImpl {
    public static final int ENTITY_SERVICEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ServiceVORowImpl obj) {
                return obj.getId();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setId((Integer)value);
            }
        }
        ,
        Name {
            public Object get(ServiceVORowImpl obj) {
                return obj.getName();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Cpu {
            public Object get(ServiceVORowImpl obj) {
                return obj.getCpu();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setCpu((Integer)value);
            }
        }
        ,
        Time {
            public Object get(ServiceVORowImpl obj) {
                return obj.getTime();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setTime((Integer)value);
            }
        }
        ,
        Description {
            public Object get(ServiceVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(ServiceVORowImpl obj) {
                return obj.getAttribute10();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setAttribute10((Integer)value);
            }
        }
        ,
        Attribute6 {
            public Object get(ServiceVORowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(ServiceVORowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        Attribute8 {
            public Object get(ServiceVORowImpl obj) {
                return obj.getAttribute8();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setAttribute8((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(ServiceVORowImpl obj) {
                return obj.getAttribute9();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setAttribute9((Integer)value);
            }
        }
        ,
        InvokeCount {
            public Object get(ServiceVORowImpl obj) {
                return obj.getInvokeCount();
            }

            public void put(ServiceVORowImpl obj, Object value) {
                obj.setInvokeCount((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ServiceVORowImpl object);

        public abstract void put(ServiceVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int CPU = AttributesEnum.Cpu.index();
    public static final int TIME = AttributesEnum.Time.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int INVOKECOUNT = AttributesEnum.InvokeCount.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ServiceVORowImpl() {
    }

    /**
     * Gets ServiceEO entity object.
     * @return the ServiceEO
     */
    public EntityImpl getServiceEO() {
        return (EntityImpl)getEntity(ENTITY_SERVICEEO);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for CPU using the alias name Cpu.
     * @return the CPU
     */
    public Integer getCpu() {
        return (Integer) getAttributeInternal(CPU);
    }

    /**
     * Sets <code>value</code> as attribute value for CPU using the alias name Cpu.
     * @param value value to set the CPU
     */
    public void setCpu(Integer value) {
        setAttributeInternal(CPU, value);
    }

    /**
     * Gets the attribute value for TIME using the alias name Time.
     * @return the TIME
     */
    public Integer getTime() {
        return (Integer) getAttributeInternal(TIME);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME using the alias name Time.
     * @param value value to set the TIME
     */
    public void setTime(Integer value) {
        setAttributeInternal(TIME, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_10 using the alias name Attribute10.
     * @return the ATTRIBUTE_10
     */
    public Integer getAttribute10() {
        return (Integer) getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_10 using the alias name Attribute10.
     * @param value value to set the ATTRIBUTE_10
     */
    public void setAttribute10(Integer value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_6 using the alias name Attribute6.
     * @return the ATTRIBUTE_6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE_6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_7 using the alias name Attribute7.
     * @return the ATTRIBUTE_7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE_7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_8 using the alias name Attribute8.
     * @return the ATTRIBUTE_8
     */
    public String getAttribute8() {
        return (String) getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_8 using the alias name Attribute8.
     * @param value value to set the ATTRIBUTE_8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE_9 using the alias name Attribute9.
     * @return the ATTRIBUTE_9
     */
    public Integer getAttribute9() {
        return (Integer) getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE_9 using the alias name Attribute9.
     * @param value value to set the ATTRIBUTE_9
     */
    public void setAttribute9(Integer value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvokeCount.
     * @return the InvokeCount
     */
    public Integer getInvokeCount() {
        return (Integer) getAttributeInternal(INVOKECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvokeCount.
     * @param value value to set the  InvokeCount
     */
    public void setInvokeCount(Integer value) {
        setAttributeInternal(INVOKECOUNT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
